<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnguigu.erp.mapper.TblRoleMapper" >


    <resultMap id="BaseResultMap" type="com.hnguigu.erp.entity.TblRole" >
        <id column="uuid" property="uuid" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="code" property="code" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        uuid, name, code
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnguigu.erp.entity.TblRoleExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from tbl_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from tbl_role
        where uuid = #{uuid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from tbl_role
        where uuid = #{uuid,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.hnguigu.erp.entity.TblRoleExample" >
        delete from tbl_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.hnguigu.erp.entity.TblRole" >
        insert into tbl_role (uuid, name, code
        )
        values (#{uuid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}
               )
    </insert>
    <insert id="insertSelective" parameterType="com.hnguigu.erp.entity.TblRole" >
        insert into tbl_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="uuid != null" >
                uuid,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="code != null" >
                code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="uuid != null" >
                #{uuid,jdbcType=BIGINT},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null" >
                #{code,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.hnguigu.erp.entity.TblRoleExample" resultType="java.lang.Integer" >
        select count(*) from tbl_role
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update tbl_role
        <set >
            <if test="record.uuid != null" >
                uuid = #{record.uuid,jdbcType=BIGINT},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null" >
                code = #{record.code,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update tbl_role
        set uuid = #{record.uuid,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.hnguigu.erp.entity.TblRole" >
        update tbl_role
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="code != null" >
                code = #{code,jdbcType=VARCHAR},
            </if>
        </set>
        where uuid = #{uuid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hnguigu.erp.entity.TblRole" >
        update tbl_role
        set name = #{name,jdbcType=VARCHAR},
            code = #{code,jdbcType=VARCHAR}
        where uuid = #{uuid,jdbcType=BIGINT}
    </update>
    <insert id="updateByid">
        insert into tbl_role_menu values
            <foreach collection="menulist" item="index" separator=",">
                    (NULL,#{id},#{index})
            </foreach>
    </insert>


    <select id="findRoleByEmpId" resultType="com.hnguigu.erp.entity.TblRole">
        SELECT tr.uuid, tr.name, tr.code
        FROM tbl_role tr
                 LEFT JOIN tbl_emp_role ter
                           ON tr.uuid = ter.roleUuid
        WHERE ter.empUuid = #{id}
    </select>


    <select id="findByRoleEmpId" resultMap="BaseResultMap">
        SELECT o.uuid, o.name, o.code FROM tbl_emp e
                          LEFT JOIN tbl_emp_role r on e.uuid = r.empUuid
                          LEFT JOIN tbl_role o on r.roleuuid = o.uuid WHERE e.uuid= #{uuid}
    </select>

    <select id="findByNameOrCode" resultMap="BaseResultMap">
        select * from tbl_role
        <where>
            <if test="name != null and name != ''">
                or name like concat('%',#{name},'%')
            </if>
            <if test="code != null and code != '' ">
                or code like concat('%',#{code},'%')
            </if>
        </where>
    </select>

    <insert id="addRole" useGeneratedKeys="true" keyProperty="id">

        insert into tbl_role values (null,#{name},#{code});
    </insert>
    <insert id="addrolemenu">
        insert into tbl_role_menu values (null,#{id},#{uuid});
    </insert>
    <insert id="addres">
        insert into tbl_role_res values (null,#{id},#{uuid});
    </insert>

    <select id="findRoleById" resultMap="BaseResultMap">
        select * from tbl_role where uuid=#{uuid}
    </select>

    <select id="findAddByNameAndpuuid" resultType="com.hnguigu.erp.entity.TblMenu">
        SELECT DISTINCT tm.* from
            tbl_menu tm
                LEFT JOIN tbl_role_menu trm on tm.uuid=trm.menuUuid
                LEFT JOIN tbl_role tr on tr.uuid=trm.roleUuid
                LEFT JOIN tbl_emp_role ter on ter.roleUuid=tr.uuid
                LEFT JOIN tbl_emp te on ter.empUuid=te.uuid
        where tr.uuid=#{uuid} and tm.puuid =1
    </select>
    
    <delete id="deleteroleres">
        delete from tbl_role_res
               where roleUuid=#{uuid}
    </delete>
    
    <delete id="deleterolemenu">
        DELETE FROM tbl_role_menu
        WHERE roleUuid=#{uuid}
    </delete>

    <select id="findAddByRes" resultType="com.hnguigu.erp.entity.TblRes">
        select * from tbl_res
    </select>
    <select id="query" resultType="com.hnguigu.erp.entity.TblRes">

        select ts.* from tbl_res ts LEFT JOIN tbl_role_res trs
                                              on ts.uuid=trs.resUuid
        where trs.roleUuid=#{uuid}
    </select>
</mapper>